<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpotifyNet</name>
    </assembly>
    <members>
        <member name="P:SpotifyNet.Model.BasicData.Image.Height">
            <summary>
            The image height in pixels.
            </summary>
        </member>
        <member name="P:SpotifyNet.Model.BasicData.Image.Url">
            <summary>
            The source URL of the image.
            </summary>
        </member>
        <member name="P:SpotifyNet.Model.BasicData.Image.Width">
            <summary>
            The image width in pixels.
            </summary>
        </member>
        <member name="T:SpotifyNet.Model.Player.Offset">
            <summary>
            Indicates from where in the context playback should start.
            </summary>
        </member>
        <member name="P:SpotifyNet.Model.Player.Offset.Position">
            <summary>
            The zero based position for the track in the playlist or album.
            </summary>
        </member>
        <member name="P:SpotifyNet.Model.Player.Offset.Uri">
            <summary>
            Representing the track uri.
            </summary>
        </member>
        <member name="M:SpotifyNet.Model.Player.Offset.#ctor(System.UInt32)">
            <summary>
            Indicates from where in the context playback should start.
            </summary>
            <param name="position">Representing the uri of the item to start at.</param>
        </member>
        <member name="M:SpotifyNet.Model.Player.Offset.#ctor(System.String)">
            <summary>
            Indicates from where in the context playback should start.
            </summary>
            <param name="uri">The zero based position for the track in the playlist or album.</param>
        </member>
        <member name="P:SpotifyNet.Model.UsersProfile.UserData.Followers.Href">
            <summary>
            A link to the Web API endpoint providing full details of the followers.
            Please note that this will always be set to null, as the Web API does not support it at the moment.
            </summary>
        </member>
        <member name="P:SpotifyNet.Model.UsersProfile.UserData.Followers.Total">
            <summary>
            The total number of followers.
            </summary>
        </member>
        <member name="T:SpotifyNet.Scope">
            <summary>
            Scopes provide Spotify users using third-party apps the confidence that only the 
            information they choose to share will be shared, and nothing more.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.None">
            <summary>
            No scopes
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadPrivate">
            <summary>
            Read access to user’s subscription details (type of user account).
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadEmail">
            <summary>
            Read access to user’s email address.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadBirthday">
            <summary>
            Read access to user’s birthdate.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.PlaylistReadPrivate">
            <summary>
            Read access to user's private playlists.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.PlaylistModifyPrivate">
            <summary>
            Write access to a user's private playlists.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.PlaylistModifyPublic">
            <summary>
            Write access to a user's public playlists.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.PlaylistReadCollaborative">
            <summary>
            Include collaborative playlists when requesting a user's playlists.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserTopRead">
            <summary>
            Read access to a user's top artists and tracks.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadRecentlyPlayed">
            <summary>
            Read access to a user’s recently played tracks.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserLibraryRead">
            <summary>
            Read access to a user's "Your Music" library.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserLibraryModify">
            <summary>
            Write/delete access to a user's "Your Music" library.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadCurrentlyPlaying">
            <summary>
            Read access to a user’s currently playing content.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserModifyPlaybackState">
            <summary>
            Write access to a user’s playback state.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserReadPlaybackState">
            <summary>
            Read access to a user’s player state.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserFollowModify">
            <summary>
            Write/delete access to the list of artists and other users that the user follows.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.UserFollowRead">
            <summary>
            Read access to the list of artists and other users that the user follows.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.Streaming">
            <summary>
            Control playback of a Spotify track. This scope is currently available to the Web Playback SDK.
            The user must have a Spotify Premium account.
            </summary>
        </member>
        <member name="F:SpotifyNet.Scope.All">
            <summary>
            All scopes which are inside <see cref="T:SpotifyNet.Scope"/>.
            </summary>
        </member>
        <member name="M:SpotifyNet.Spotify.GetMeAsync">
            <summary>
            Get Current User's Profile 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.GetPlaylistsAsync(System.Int32,System.Int32)">
            <summary>
            Get a List of Current User's Playlists
            </summary>
            <param name="limit">The maximum number of playlists to return. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first playlist to return. Maximum offset: 100.000. </param>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.GetUsersSavedTracksAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Get a list of the songs saved in the current Spotify user’s ‘Your Music’ library.
            </summary>
            <param name="limit">The maximum number of objects to return. Default: 20. Minimum: 1. Maximum: 50.</param>
            <param name="offset">The index of the first track to return. Maximum offset: 100.000. </param>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.GetDevicesAsync">
            <summary>
            Get information about a user’s available devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.GetCurrentlyPlayingAsync(System.String)">
            <summary>
            Get the object currently being played on the user’s Spotify account.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.GetCurrentPlaybackInfoAsync(System.String)">
            <summary>
            Get information about the user’s current playback state, including track, track progress, and active device.
            </summary>
            <param name="market">An ISO 3166-1 alpha-2 country code or the string from_token. Provide this parameter if you want to apply Track Relinking.</param>
            <returns></returns>
        </member>
        <member name="M:SpotifyNet.Spotify.PausePlayback(System.String)">
            <summary>
            Pause playback on the user’s account.
            </summary>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.SkipPlaybackToPrevious(System.String)">
            <summary>
            Skips to previous track in the user’s queue.
            </summary>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.SkipPlaybackToNext(System.String)">
            <summary>
            Skips to next track in the user’s queue.
            </summary>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.ToggleShuffle(System.Boolean,System.String)">
            <summary>
            Toggle shuffle on or off for user’s playback.
            </summary>
            <param name="state"><see langword="true"/>: Shuffle user’s playback <see langword="false"/>: Do not shuffle user’s playback.</param>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.StartResumePlayback(System.Nullable{System.UInt32},System.String)">
            <summary>
            Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="position_ms">Indicates from what position to start playback. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.StartResumePlayback(System.String,SpotifyNet.Model.Player.Offset,System.Nullable{System.UInt32},System.String)">
            <summary>
            Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="context_uri">Spotify URI of the context to play. Valid contexts are albums, artists, playlists.</param>
            <param name="offset">Indicates from where in the context playback should start. Only available when <paramref name="context_uri"/> corresponds to an album or playlist object.</param>
            <param name="position_ms">Indicates from what position to start playback. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.StartResumePlayback(System.String[],SpotifyNet.Model.Player.Offset,System.Nullable{System.UInt32},System.String)">
            <summary>
            Start a new context or resume current playback on the user’s active device.
            </summary>
            <param name="uris">A array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start.</param>
            <param name="position_ms">Indicates from what position to start playback. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.Spotify.StartResumePlayback(System.String,System.String[],SpotifyNet.Model.Player.Offset,System.Nullable{System.UInt32},System.String)">
            <summary>
            Start a new context or resume current playback on the user’s active device.
            Only one of either <paramref name="context_uri"/> or <paramref name="uris"/> can be specified. If neither is present, calling will resume playback. If both are present the request will return <see cref="F:System.Net.HttpStatusCode.BadRequest"/>.
            If <paramref name="context_uri"/> is a Playlist or Album, or when <paramref name="uris"/> is provided, then <paramref name="offset"/> can be added to specify starting track in the context.
            If the provided <paramref name="context_uri"/> corresponds to an album or playlist object, an <paramref name="offset"/> can be specified either by <see cref="P:SpotifyNet.Model.Player.Offset.Uri"/> OR position.If both are present the request will return <see cref="F:System.Net.HttpStatusCode.BadRequest"/>. If incorrect values are provided for <see cref="P:SpotifyNet.Model.Player.Offset.Position"/> or <see cref="P:SpotifyNet.Model.Player.Offset.Uri"/>, the request may be accepted but with an unpredictable resulting action on playback.
            </summary>
            <param name="context_uri">Spotify URI of the context to play. Valid contexts are albums, artists, playlists.</param>
            <param name="uris">A array of the Spotify track URIs to play.</param>
            <param name="offset">Indicates from where in the context playback should start. Only available when <paramref name="context_uri"/> corresponds to an album or playlist object, or when the <paramref name="uris"/> parameter is used.</param>
            <param name="position_ms">Indicates from what position to start playback. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="device_id">The id of the device this command is targeting. If not supplied, the user’s currently active device is the target.</param>
            <returns>
            A completed request will return a <see cref="F:System.Net.HttpStatusCode.NoContent"/> response code, and then issue the command to the player.
            Due to the asynchronous nature of the issuance of the command, you should use the <see href="https://developer.spotify.com/documentation/web-api/reference/player/get-information-about-the-users-current-playback">Get Information About The User’s Current Playback</see> endpoint to check that your issued command was handled correctly by the player.
            If the device is not found, the request will return <see cref="F:System.Net.HttpStatusCode.NotFound"/> response code.
            If the user making the request is non-premium, a <see cref="F:System.Net.HttpStatusCode.Forbidden"/> response code will be returned.
            </returns>
        </member>
        <member name="M:SpotifyNet.WebAuthorization.GetAuthorizationCode(System.String,System.String,SpotifyNet.Scope,System.Boolean)">
            <summary>
            1. GetAuthorizationCode
            </summary>
            <param name="client_id">Client ID</param>
            <param name="redirect_uri">Redirect URL</param>
            <param name="scope"></param>
            <param name="show_dialog"></param>
            <returns>authorization_code</returns>
        </member>
        <member name="M:SpotifyNet.WebAuthorization.GetAccessTokenAsync(System.String,System.String,System.String,System.String)">
            <summary>
            2. GetAccessToken
            </summary>
            <param name="authorization_code">Authorization Code from <see cref="M:SpotifyNet.WebAuthorization.GetAuthorizationCode(System.String,System.String,SpotifyNet.Scope,System.Boolean)"/></param>
            <param name="redirect_uri">The same Redirect URI which was used in <see cref="M:SpotifyNet.WebAuthorization.GetAuthorizationCode(System.String,System.String,SpotifyNet.Scope,System.Boolean)"/></param>
            <param name="client_id">Client ID</param>
            <param name="client_secret">Client Secret</param>
            <returns><see cref="T:SpotifyNet.AccessToken"/></returns>
        </member>
        <member name="M:SpotifyNet.WebAuthorization.RefreshAccessTokenAsync(SpotifyNet.AccessToken,System.String,System.String)">
            <summary>
            3. RefreshAccessToken
            </summary>
            <param name="accessToken">Access Token</param>
            <param name="client_id">Client ID</param>
            <param name="client_secret">Client Secret</param>
            <returns><see cref="T:SpotifyNet.AccessToken"/></returns>
        </member>
    </members>
</doc>
